turf vs JSTS
===

[JSTS](https://github.com/bjornharrtell/jsts) is an awesome project. turf may even depend on some of its code in the future. At the same time, it is far more complicated than turf, and the learning curve is much steeper than turf. Here are the main things I would point to that distinguish turf from JSTS:

- dead simple api. JSTS tends to follow Java idioms rather than node.js (which is understandable, as that is where it came from).

- geojson from the ground up. This means you can load any geojson file into memory, pass it directly into any turf function, and get geojson back that can be directly displayed into a map. No complex data structures makes it way easier to use.

- functional programming style. This will make it possible to distribute work out over node.js computing clusters and do a lot of cool "mapreduce-y" type stuff.

- focus on data analysis, instead of topological manipulations (turf will do many of these things, but the real goal is more complex data analysis like spatial clustering, contours, tins, data classification, etc.).

In summary, JSTS and turf have different goals. In some cases, it is an either/or, but in many cases they are complimentary libraries. Turf is first and foremost a spatial analysis utility belt focusing on the data contained in the attributes of geometries. JSTS is focused on geometric processing and topological manipulation.

---

11-27-13